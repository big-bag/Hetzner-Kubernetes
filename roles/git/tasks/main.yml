---
- name: check installed version
  ansible.builtin.command:
    cmd: /usr/local/bin/git --version
  register: current_version
  failed_when: false
  changed_when: false

- name: if git isn't installed, then set the version to zero; otherwise, set the current version
  ansible.builtin.set_fact:
    current_version: "{% if current_version.failed %}0{% else %}{{ current_version.stdout[12:] }}{% endif %}"

- name: build git
  block:
    - name: install the software that git depends on
      ansible.builtin.dnf:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - gettext-devel
          - openssl-devel
          - perl-CPAN
          - perl-devel
          - zlib-devel
          - gcc
          - autoconf
          - libcurl-devel
          - expat-devel

    - name: install the software that unarchive module depends on
      ansible.builtin.dnf:
        name: tar
        state: present

    - name: download git tarball
      ansible.builtin.unarchive:
        src: https://mirrors.edge.kernel.org/pub/software/scm/git/git-{{ git_version }}.tar.gz
        dest: /usr/local/src/
        remote_src: yes

    - name: declare the appropriate destination for the binary and compile the source code into a working program
      ansible.builtin.command:
        cmd: make prefix=/usr/local all
      args:
        chdir: /usr/local/src/git-{{ git_version }}/
        creates: /usr/local/src/git-{{ git_version }}/git

    - name: install git
      ansible.builtin.command:
        cmd: make prefix=/usr/local install
      args:
        chdir: /usr/local/src/git-{{ git_version }}/
  when: "'{{ git_version }}' != '{{ current_version }}'"
