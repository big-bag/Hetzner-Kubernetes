---
- name: gather hcloud volume infos
  hetzner.hcloud.hcloud_volume_info:
    api_token: "{{ hcloud_token }}"
  register: output

- name: delete a volume
  hetzner.hcloud.hcloud_volume:
    api_token: "{{ hcloud_token }}"
    name: "{{ item.name }}"
    state: absent
  loop: "{{ output.hcloud_volume_info }}"

- name: delete a load balancer
  hetzner.hcloud.hcloud_load_balancer:
    api_token: "{{ hcloud_token }}"
    name: load-balancer-1
    state: absent

- name: delete item(-s) in 1password
  block:
    - name: sign in to a 1password account
      ansible.builtin.shell:
        cmd: |
          export OP_DEVICE="{{ one_password_device_id }}"
          echo "{{ one_password_master_password }}" | op signin "{{ one_password_subdomain }}.1password.com" "{{ one_password_email_address }}" "{{ one_password_secret_key }}" --raw
      register: op_session_token
      changed_when: false

    - name: delete item(-s)
      ansible.builtin.shell:
        cmd: |
          export "OP_SESSION_{{ one_password_subdomain }}"="{{ op_session_token.stdout }}"
          op delete item "{{ item.name }}" --vault "{{ one_password_vault_name }}"
      loop: "{{ servers }}"
      failed_when: false
      changed_when: false
      no_log: true

    - name: sign out from a 1password account (1/2)
      ansible.builtin.shell:
        cmd: op signout --forget
      changed_when: false

    - name: sign out from a 1password account (2/2)
      ansible.builtin.file:
        path: $HOME/.config/op/config
        state: absent
  run_once: true

- name: delete folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - group_vars
    - inventory

- name: delete a server
  hetzner.hcloud.hcloud_server:
    api_token: "{{ hcloud_token }}"
    name: "{{ item.name }}"
    state: absent
  loop: "{{ servers }}"

- name: delete a network
  hetzner.hcloud.hcloud_network:
    api_token: "{{ hcloud_token }}"
    name: network-1
    state: absent

- name: delete a ssh_key
  hetzner.hcloud.hcloud_ssh_key:
    api_token: "{{ hcloud_token }}"
    name: "{{ users | json_query('[*].name') | first }}"
    state: absent
